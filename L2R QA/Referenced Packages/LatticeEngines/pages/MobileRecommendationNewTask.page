
<apex:page showHeader="false" 
			sidebar="false" 
			standardController="LBI__Recommendation__c" 
			standardStylesheets="false" 
			extensions="LBI.MobileRecommendationNewTaskController" 
			docType="html-5.0" 
			id="thePage" 
			applyHtmlTag="false" 
			applyBodyTag="false"
			showQuickActionVfHeader="false">

	<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

		<head>
			<apex:stylesheet value="{!URLFOR($Resource.LBI__SLDS092, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
			<apex:stylesheet value="{!URLFOR($Resource.LBI__installAssets, 'styles/main.css')}" />
			<apex:includeScript value="{!URLFOR($Resource.LBI__jQuery)}" />
			<apex:includeScript value="{!URLFOR($Resource.LBI__SLDSValidator)}" />
			
			<script type="text/javascript" >
				var lejQuery = jQuery.noConflict();
				
		        lejQuery(document).ready(function(){
		        	if ({!isInLightning}) {
		            	lejQuery("div.slds").css("padding", "10px");
		            }
		        });
			</script>
		</head>

		<body>

			<apex:form id="theForm">
				<div class="slds">

					<div class="slds-grid slds-wrap">

						<!--Action Buttons -->
						<div class="slds-col slds-size--1-of-1">
							<button class="slds-button slds-button--neutral slds-float--left" onclick="customCancel();return false;" id="cancel">
								<apex:outputText value="{!$Label.lbi__lab_cancel}" />
							</button>
							<!-- <a href="#" class="slds-button slds-button--brand slds-float--right" id="callbtn" onclick="newTaskRemote();return false;">
								<apex:outputText value="{!$Label.lbi__lab_save}" />
							</a> -->
							<button class="slds-button slds-button--brand slds-float--right" id="callbtn" onclick="newTaskRemote();return false;">
								<apex:outputText value="{!$Label.lbi__lab_save}" />
							</button>
						</div>

						<div class="slds-col slds-size--1-of-1 slds-m-vertical--large">
							<h2 class="slds-text-heading--medium">
								<apex:outputText value="{!$Label.lbi__ais_newtask}" />
							</h2>
						</div>

						<div class="slds-col slds-size--1-of-1" id="errorwrapper">
						</div>

						<div class="slds-col slds-size--1-of-1">

							<div class="slds-form-element slds-m-vertical--medium">
								<label class="slds-form-element__label" for="Account">
									<apex:outputtext value="{!$Label.lbi__rep_assignedto}" />
								</label>
								<c:Typeahead searchBoxId="assigneduserId" placeholder="Search from Existing User" destinationForSelectedId="usrId" primaryFocusField="Name" whereClause="" objectName="User" mapParameters="" required="true">
								</c:Typeahead>
							</div>

							<div class="slds-form-element slds-m-vertical--medium">
								<label class="slds-form-element__label" for="subject">
									<apex:outputtext value="* {!$ObjectType.Task.fields.Subject.label}"/>
								</label>
								<div class="slds-form-element__control">
									<input id="subject" class="slds-input" type="text" data-required="true" data-fieldName="Subject"/>
								</div>
							</div>

							<div class="slds-form-element">
								<label class="slds-form-element__label" for="dueDate">
									<apex:outputtext value="{!$ObjectType.Task.fields.ActivityDate.label}"/>
								</label>
								<div class="slds-form-element__control">
									<input id="dueDate" aria-describedby="dueDate"  type="date" />
								</div>
							</div>

							<div class="slds-form-element slds-m-vertical--medium">
								<label class="slds-form-element__label" for="status">
									<apex:outputtext value="{!$ObjectType.Task.fields.status.label}" />
								</label>
								<div class="slds-form-element__control">
									<apex:inputField value="{!task.status}" id="status" styleclass="slds-input"/>
								</div>
							</div>


							<div class="slds-form-element slds-m-vertical--medium">
								<label class="slds-form-element__label" for="priority">
									<apex:outputtext value="{!$ObjectType.Task.fields.Priority.label}"/>
								</label>
								<div class="slds-form-element__control">
									<apex:inputField value="{!task.Priority}" id="priority" styleclass="slds-input"/>
								</div>
							</div>

							<apex:outputPanel layout="none" rendered="{!IF(selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__Type__c=='Recommendation','true','false')}">

								<div class="slds-form-element slds-m-vertical--medium">
									<label class="slds-form-element__label slds-m-top--small" for="accountId">
										<apex:outputText value="{!$Label.lbi__mod_account}" />
									</label>

									<div class="slds-form-element__control">
										<span id="accountId" styleclass="slds-form-element__static" type="text">
											<apex:outputtext value="{!selectedRecommendation.Account__r.Name}" />
										</span>
									</div>
								</div>
							</apex:outputPanel>

							<apex:outputPanel layout="none" rendered="{!IF(selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__Type__c=='Lead','true','false')}" id="leadflow">
								<div class="slds-form-element slds-m-vertical--medium">
									<label class="slds-form-element__label slds-m-top--small" for="leadId">
										<apex:outputText value="{!$Label.lbi__mod_lead}" />
									</label>
									<div class="slds-form-element__control">
										<span id="leadId" styleclass="slds-form-element__static" type="text">
											<apex:outputtext value="{!selectedRecommendation.Lead__r.Name}"/>
										</span>
									</div>
								</div>
							</apex:outputPanel>

							<apex:outputPanel layout="none" rendered="{!IF(selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__Type__c=='Recommendation','true','false')}" id="accountflow">
								<div class="slds-form-element slds-m-vertical--medium">
									<label class="slds-form-element__label" for="Contact">
										<apex:outputText value="{!$Label.lbi__mod_contact}" />
									</label>
									<c:Typeahead searchBoxId="contactId" placeholder="Search from Existing Contact" destinationForSelectedId="cntId" primaryFocusField="Name" whereClause="" objectName="Contact" mapParameters="" required="false" accountId="{!selectedRecommendation.LBI__Account__c}">
									</c:Typeahead>
								</div>
							</apex:outputPanel>


							<!-- Add in the classes below of 'slds-has-error slds-is-required' -->
							<div class="slds-form-element slds-m-vertical--medium">
								<label class="slds-form-element__label" for="description">
									<apex:outputText value="{!$ObjectType.Task.fields.Description.label}" />
								</label>
								<div class="slds-form-element__control">
									<textarea id="description" class="slds-textarea"></textarea>
								</div>
							</div>
						</div>

						<input type="hidden" name="usrId" id="usrId" />
						<input type="hidden" name="cntId" id="cntId" />

					</div>

				</div>
				<!-- Doing this because, once installed, we're having problems with this field and the standard controller -->
				<apex:inputHidden value="{!selectedRecommendation.LBI__LeadId__c}" />
				
			</apex:form>

			<script type="text/javascript">

				var imageURL = "{!URLFOR($Resource.SLDS092, 'assets/icons/action-sprite/svg/symbols.svg#close')}";
				var j$ = jQuery.noConflict();

				j$(document).ready(function () {
					init();
					
				});

				function init() {
					document.getElementById('assigneduserId').value = '{!$User.FirstName}' + ' ' + '{!$User.LastName}';
					document.getElementById('usrId').value = '{!$User.Id}';
					var date = new Date(); //Create the date instance in JS
					document.getElementById('dueDate').valueAsDate = date;
				}

				function getElementvalue(documentId) {
					return document.getElementById(documentId).value;
				}

				function newTaskRemote() {
					//console.log(validatorSLDSplugin.validate());
					if (!validatorSLDSplugin.validate()) {
						var description = getElementvalue('description');
						var subject = getElementvalue('subject');
						var contactId = getElementvalue('cntId');
						var dueDate = (document.getElementById('dueDate').valueAsDate).toUTCString﻿();
						var assignedTo = getElementvalue('usrId');
						var priority = getElementvalue('{!$Component.thePage.theForm.priority}');
						var status = getElementvalue('{!$Component.thePage.theForm.status}');
						var accountId;
						if ('{!JSENCODE(selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.Type__c)}' === 'Lead') {
							contactId = '{!selectedRecommendation.LBI__LeadId__c}';
						}
						if ('{!JSENCODE(selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.Type__c)}' === 'Recommendation') {
							accountId = '{!selectedRecommendation.LBI__Account__c}';
						} else {
							accountId = '';
						}
						//alert('making call');
						Visualforce.remoting.Manager.invokeAction(
							'{!$RemoteAction.MobileRecommendationNewTaskController.newTaskRemote}',
							subject,
							description,
							accountId,
							'{!JSENCODE(selectedRecommendation.Id)}',
							contactId,
							priority,
							status,
							assignedTo,
							dueDate,
							function (result, event) {
							if (event.status) {
								if ('{!$CurrentPage.parameters.fromLead}' == 'true') {
									sforce.one.navigateToURL('{!$Page.MobileLeadRecommendationCard}?id={!JSENCODE(selectedRecommendation.LeadId__c)}&mobilemessage={!$label.MOBILEINFO_RecommendationTaskCreated}&backCounter={!JSENCODE($CurrentPage.parameters.backCounter)}&success=1', true);
								} else {
									sforce.one.navigateToURL('{!$Page.RecommendationsList}?id={!JSENCODE(selectedRecommendation.Id)}&mobilemessage={!$label.MOBILEINFO_RecommendationTaskCreated}&backCounter={!JSENCODE($CurrentPage.parameters.backCounter)}&success=1', true);
								}
							} else {
								// TODO: deal with error by inserting error message on DOM
								validatorSLDSplugin.displayalert(event.message, 'error');
							}
						}, {
							escape : false
						});
					}
					//}
				}

				function customCancel() {
					if ('{!$CurrentPage.parameters.fromLead}' == 'true') {
						//sforce.one.navigateToURL('{!$Page.MobileLeadRecommendationCard}?id={!JSENCODE(selectedRecommendation.LeadId__c)}&mobilemessage={!$label.INFO_RecommendationTaskCreatedCancelled}&success=0',true);
						sforce.one.navigateToURL('{!$Page.MobileLeadRecommendationCard}?id={!JSENCODE(selectedRecommendation.LeadId__c)}&backCounter={!JSENCODE($CurrentPage.parameters.backCounter)}&success=0', true);
					} else {
						//sforce.one.navigateToURL('{!$Page.RecommendationsList}?id={!JSENCODE(selectedRecommendation.Id)}&mobilemessage={!$label.INFO_RecommendationTaskCreatedCancelled}&success=0',true);
						sforce.one.navigateToURL('{!$Page.RecommendationsList}?id={!JSENCODE(selectedRecommendation.Id)}&backCounter={!JSENCODE($CurrentPage.parameters.backCounter)}&success=0', true);
					}
				}

				window.onkeydown = function () { // Workaround for known issue with SFDC(https://success.salesforce.com/issues_view?id=a1p30000000T5l1AAC)
					window.focus();
				}
			</script>

		</body>

	</html>

</apex:page>