<apex:page showHeader="false" 
			sidebar="false" 
			standardController="LBI__Recommendation__c" 
			standardStylesheets="false" 
			extensions="LBI.MobileRecommendationLeadConvtController" 
			docType="html-5.0" 
			id="thePage" 
			applyHtmlTag="false" 
			applyBodyTag="false"
			showQuickActionVfHeader="false">

<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<head>
    <apex:stylesheet value="{!URLFOR($Resource.LBI__SLDS092, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.LBI__installAssets, 'styles/main.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.LBI__jQuery)}" />
    <apex:includeScript value="{!URLFOR($Resource.LBI__TypeaheadController)}" />
    <apex:includeScript value="{!URLFOR($Resource.LBI__SLDSValidator)}" />
    
    <script type="text/javascript" >
    	var lejQuery = jQuery.noConflict();
    	
        lejQuery(document).ready(function(){
        	if ({!isInLightning}) {
            	lejQuery("div.slds").css("padding", "10px");
            }
        });
	</script>
	
</head>

    <body>

    <apex:form id="theForm">

	    <div class="slds">
	        <div class="slds-grid slds-wrap">
	            <!--Action Buttons -->
	            <div class="slds-col slds-size--1-of-1">
	               <!--  <apex:commandLink styleClass="slds-button slds-button--neutral slds-float--left" action="{!cancel}" id="cancel">{!$Label.LAB_Cancel}</apex:commandLink>-->
                 <button class="slds-button slds-button--neutral slds-float--left" onclick="customCancel();return false;" id="cancelButton">{!$Label.LAB_Cancel}</button>
		             <!-- <a href="#" class="slds-button slds-button--brand slds-float--right" id="callbtn" onclick="leadConvert();return false;">Save</a> -->
		             
		             <button class="slds-button slds-button--brand slds-float--right" id="callbtn" onclick="leadConvert();return false;">
						<apex:outputText value="{!$Label.lbi__lab_save}" />
					</button>
		             
	            </div>
				<apex:outputPanel layout="none" rendered="{!showConvertOppButtonLeadBased}">
		            <div class="slds-col slds-size--1-of-1 slds-m-vertical--small">
		              <h2 class="slds-text-heading--medium">{!$Label.lbi__rep_convert_opportunity}</h2>
		            </div>
				</apex:outputPanel>
              <div class="slds-col slds-size--1-of-1" id="errorwrapper">
              </div>

	            <div class="slds-col slds-size--1-of-1">

	            	<div class="slds-form-element slds-m-vertical--medium">
		               <label class="slds-form-element__label" for="usrId">Assigned To</label>
		                <c:Typeahead searchBoxId="assigneduserId" placeholder="Search from Existing User/Type the new Account Name" destinationForSelectedId="usrId" primaryFocusField="Name" whereClause="" objectName="User" mapParameters="" required="true">
                       </c:Typeahead>
                    </div>

                    <div class="slds-form-element slds-m-vertical--medium">
		               <label class="slds-form-element__label" for="accountId">Account</label>
		                <c:Typeahead searchBoxId="accountId" placeholder="Search from Existing Accounts" destinationForSelectedId="accId" primaryFocusField="Name" whereClause="" objectName="Account" mapParameters="">
                       </c:Typeahead>
                    </div>

                  <div class="slds-form-element slds-m-vertical--medium">
		               <label class="slds-form-element__label" for="contactId">Contact</label>
		               <input type="text" id="contactId" class="slds-input"/>
                    </div>

                    <div class="slds-form-element slds-m-vertical--medium">
                		<label class="slds-form-element__label" for="oppName">Opportunity Name</label>
	                <div class="slds-form-element__control">
	                  <input id="oppName" class="slds-input" type="text" data-required="true" data-fieldName="Opportunity Name"/>
	                </div>

	                <div class="slds-form-element slds-m-vertical--medium">
		                <label class="slds-form-element__label" for="thestatus"><apex:outputtext value="{!$ObjectType.Lead.fields.Status.label}"/></label>
		                <div class="slds-form-element__control">
		                    <apex:selectList id="thestatus"  size="1" styleclass="slds-input">
		            			<apex:selectOptions value="{!LeadConvertStatus}"/>
        					</apex:selectList> 
		                </div>
              		</div>

	                <input type="hidden" name="usrId" id="usrId" />
                  	<input type="hidden" name="accId" id="accId" />
                  	<input type="hidden" name="cntId" id="cntId" />

              </div>

	            </div>

	        </div>
	    </div>
  
      <!-- Doing this because, once installed, we're having problems with this field and the standard controller -->
      <apex:inputHidden value="{!selectedRecommendation.LBI__LeadId__c}" />
     	</apex:form>

     	<script>

       var imageURL = "{!URLFOR($Resource.SLDS092, 'assets/icons/action-sprite/svg/symbols.svg#close')}";
       var j$ = jQuery.noConflict();

       j$(document).ready(function(){
          
          typeaheadinit(j$);
          init();
          
       });

      function typeaheadinit(j$){
          var typeaheadvar = new typeaheadFn(j$,
                                          'contactId',
                                          'cntId',
                                          'accId',
                                          '{!$RemoteAction.MobileRecommendationLeadConvtController.getContactsByAccount}'


            );
            
            j$('#contactId').typeahead({
                minLength: 2,
                hint: true,
                autoselect: true,
                highlight: true
            },
            {
                source: typeaheadvar.contactId.contactQuery,    // calls our remoting function
                name:  'contactIdTypeahead',
            }).on('typeahead:selected', function (object, datum) {
                typeaheadvar.contactId.setSelectedValue( this, datum.id, datum.value );
                // console.log('typeahead:selected => ' + datum.id);
            }).on('typeahead:autocompleted', function (object, datum) {
                typeaheadvar.contactId.setSelectedValue( this, datum.id, datum.value );
                // console.log('typeahead:autocompleted => ' + datum.id);
            }).on('typeahead:cursorchanged', function (object, datum) {
                typeaheadvar.contactId.setSelectedValue( this, datum.id, datum.value );
                // console.log('typeahead:cursorchanged => ' + datum.id);
               }).on('typeahead:closed', function (object, datum) {
                 //     console.log('typeahead:closed');
             //});
            }).keyup( function(ev) {
                // if they press backspace or escape, we want to clear the selection
                if ( ev.which == 8 || ev.which == 27 ) {
                    typeaheadvar.contactId.setSelectedValue( this, null, null );
                }
            });
      }

       function init(){
          document.getElementById('assigneduserId').value = '{!JSENCODE($User.FirstName)}' +' ' +'{!JSENCODE($User.LastName)}';
          document.getElementById('usrId').value = '{!JSENCODE($User.Id)}';
          document.getElementById('oppName').value = '{!JSENCODE(selectedRecommendation.Lead__r.Company)}';
       }

       function getElementvalue(documentId){
          return document.getElementById(documentId).value;
       }
       
       function customCancel(){
        if ('{!$CurrentPage.parameters.fromLead}' == 'true') {
          sforce.one.navigateToURL('{!$Page.MobileLeadRecommendationCard}?id={!selectedRecommendation.LBI__LeadId__c}&backCounter={!$CurrentPage.parameters.backCounter}&success=0',true);
        } else {
          sforce.one.navigateToURL('{!$Page.RecommendationsList}?id={!selectedRecommendation.Id}&backCounter={!$CurrentPage.parameters.backCounter}&success=0',true); 
        }
      }

       function leadConvert(){
	       	if(!validatorSLDSplugin.validate()){ 
	       		var accountId = getElementvalue('accId');
	       		var opportunityName = getElementvalue('oppName');
	       		var ownerId = getElementvalue('usrId');
	       		var leadStatus = getElementvalue('{!$Component.thePage.theForm.thestatus}');
	       		var accountName = getElementvalue('accountId');
	       		var contactId = getElementvalue('cntId');
	       		Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.MobileRecommendationLeadConvtController.leadConvert
                        }',
                        accountId,
                        '{!JSENCODE(selectedRecommendation.Id)}',
                        opportunityName,
                        leadStatus,
                        '{!selectedRecommendation.LBI__LeadId__c}',
                        ownerId,
                        '{!selectedRecommendation.Status__c}',
                         contactId,
                        function(result, event){
                            if (event.status) {
                                sforce.one.navigateToSObject(result); 
                            } else {
                                // TODO: deal with error by inserting error message on DOM
                                  validatorSLDSplugin.displayalert(event.message,'error');
                            }
                        }, 
                        {escape: false}
                    );
	       	}
       }

       window.onkeydown=function(){ // Workaround for known issue with SFDC(https://success.salesforce.com/issues_view?id=a1p30000000T5l1AAC)
                window.focus();
        }

       </script>
    </body>

</html>
	
</apex:page>