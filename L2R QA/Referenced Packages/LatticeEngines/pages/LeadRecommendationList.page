<apex:page standardController="Lead"
		sidebar="{!showSidebar}"
		extensions="LBI.LeadRecommendationListController"
		tabStyle="Lattice_Leads_Recommendations__tab"
		id="thePage"
		title="{!$Label.lbi__title_lead_recommendation}"
		action="{!onload}">


	<apex:includeScript value="/support/console/37.0/integration.js"/>
	<apex:includeScript value="{!URLFOR($Resource.LBI__jQuery)}" />
	<apex:includeScript value="{!URLFOR($Resource.LBI__RecommendationListJavascript)}" />
	<apex:includeScript value="{!URLFOR($Resource.LBI__installAssets, 'js/bootstrap.min.js')}"  />
   	<apex:includeScript value="{!URLFOR($Resource.LBI__BootstrapResponsiveTabs, 'bootstrap-responsive-tabs/bootstrap-responsive-tabs.js')}"  />

    <apex:includeScript value="{!URLFOR($Resource.LBI__mixpanel_js)}"  />

    <apex:stylesheet value="{!URLFOR($Resource.LBI__BootstrapResponsiveTabs, 'bootstrap-responsive-tabs/bootstrap-responsive-tabs.css')}"/>
	<apex:stylesheet value="{!URLFOR($Resource.LBI__installAssets, 'styles/main.css')}"/>

	<script type="text/javascript" >
        var theEnhancedList = null;

        var mpOldTabName = "{!JSINHTMLENCODE(iFrameSettings.defaultTab)}".replace(/([a-z])([A-Z])/g, '$1 $2');
        var mpBasicReturnObject = {"Page" : "{!$CurrentPage.Name}",
                                    "OrgID" : "{!$Organization.Id}",
                                    "CustomerID" : hashCode("{!$User.Id}"),
                                    "Product Name" : "BIS"}

        var mixpanelModule = new MixPanelModule(lejQuery, mpBasicReturnObject, mpOldTabName, {!isEnabledMixPanel}, null, mixPanelShouldTrackActionCallback);

        var isInSalesConsole = isInSalesConsole();

        lejQuery(document).ready(function(){
            mixpanelModule.sendMpMessage("Page Load");

            setIsInSalesConsole(isInSalesConsole);

            if (sforce.console) {
       			sforce.console.setTabTitle('{!JSINHTMLENCODE(selectedRecommendation.DisplayName__c)}');
       		}
        });

        window.onbeforeunload = function (arg) {
            mixpanelModule.sendMpPageDurationMessage("Page Unload");
        }

        function adjustContainerWidth(){
            if (isInSalesConsole){
                lejQuery("#bootstrap-lattice * .container-fluid").addClass("console-container");
                lejQuery("#bootstrap-lattice").addClass("console-section");
                lejQuery(".no-more-tables").removeClass("no-more-tables");
            }
        }

        function toggleClass(element, className){
            if (!element || !className){
                return;
            }

            var classString = element.className, nameIndex = classString.indexOf(className);
            if (nameIndex == -1) {
                classString += ' ' + className;
            }
            else {
                classString = classString.substr(0, nameIndex) + classString.substr(nameIndex+className.length);
            }
            element.className = classString;
        }

        function buildURL (listRecordId) {
            return '<a class="chevron glyphicon-sf-view" id="chevron_' + listRecordId + '" onclick="selectNewLead(\'' + listRecordId + '\');"></a>';
        }

        var hasPageNumSpecified = {!hasPageNumSpecified};

        // Timeout is required here to make jQuery happen after ExtJS happens
        function fixListView () {

        	if (hasPageNumSpecified) {
        		// Navigate to the required page if it's not the same one we're on now
	            if (lejQuery("[id$='leadPageNumber']").val() != lejQuery('input.pageInput').val()) {
	            	Paginator.instances['thePage:theLeadList_paginator'].goToPage({!accountPageNumber});
	            }
	            hasPageNumSpecified = false;
        	}

            if (theEnhancedList) {
                theEnhancedList.grid.store.each(function(r) {

                    // get the value from the record id field
                    var recordId = r.id;
                    //var accountName = r.get('ACCOUNT.NAME')[1];

                    // create the anchor tag
                    var newAnchor = buildURL(recordId);

                    // the action column is an array type
                    r.set('ACTION_COLUMN', [newAnchor]);

                    // clear the dirty flag on the cell
                    r.commit();
                });

                lejQuery("[id$='leadPageNumber']").val(lejQuery('input.pageInput').val());

            }

           if (lejQuery('a.chevron').length > 0) {
                if ({!returningToPage} == false) {
                    lejQuery('a.chevron')[0].click();
                } else {
                    lejQuery('a#chevron_{!LEFT(selectedParentId, 15)}').closest('tr').addClass('selectedChevron');
                }
            } else {
                clearLowerSection();
            }


        }


        function clearLowerSection () {
            lejQuery('section.content-main').hide();
        }

        function handleOnComplete(el) {

            // the list itself and the columnModel within it
            theEnhancedList = el;

            var actionColIndex = theEnhancedList.grid.colModel.getIndexById('ACTION_COLUMN');

            // Rename the Action column oner
            var latticeLabel = '{!JSINHTMLENCODE($Label.MASS_Lattice)}';
            theEnhancedList.grid.colModel.setColumnHeader(actionColIndex, latticeLabel);
            theEnhancedList.grid.colModel.setColumnWidth(actionColIndex, Math.max(latticeLabel.length * 7, 40));

            // hide the checkbox column if necessary

            //theEnhancedList.grid.colModel.setHidden(0, true);//Dont hide this as per bug raised


            // delay if the grid is using late rendering so the grid.store has data in it
            if (theEnhancedList.grid.deferRowRender) {
                setTimeout(fixListView, 1);
            } else {
                fixListView();
            }

        }

         function selectNewLead (thisId) {
            lejQuery('section.content-main').show();
            lejQuery('a.chevron').closest('tr').removeClass('selectedChevron');
            lejQuery('a#chevron_'+thisId).closest('tr').addClass('selectedChevron');
            selectNewLeadApex(thisId);
            mixpanelModule.startTabStopwatch();
        }

        // Since the dom is updated each time the account is selected, we need to reattach these
        // This is called oncomplete from anything that selects an account
        function attachClickOverridesOnCheckboxes () {
            // Prevent the click event on the checkbox from firing the parent click event
            lejQuery('input.checkableSFDCId').click(function( event ) {
              event.stopPropagation();
            });
        }

		function mixPanelShouldTrackActionCallback(itemId) {

            if (itemId == 'converToOppButton' ||
                itemId == 'linkToOppButton' ||
                itemId == 'disqualifyButtton' ||
                itemId == 'emailButton' ||
                itemId == 'logButton' ||
                itemId == 'taskButton' ||
                itemId == 'meetingButton' ||
                itemId == 'eventButton') {
                    return findSelectedRecommendations().length != 0;
            }

            return true;
        }
	</script>

	<!-- This shows up when they don't have permissions -->
	<apex:outputPanel layout="none" rendered="{!!hasPermissionRequired}" >
		 <apex:pageMessages id="noPermissionPageMessages" />
	</apex:outputPanel>

	<!-- This only renders when they DO have access. -->
	<apex:outputpanel layout="none" rendered="{!hasPermissionRequired}" >
	<apex:enhancedList type="Lead" id="theLeadList" height="360" rendered="{!showLeadList}" oncomplete="handleOnComplete(this);" />

	<section class="content-main" id="bootstrap-lattice">
		<apex:form id="theForm" >

        <apex:actionFunction name="setIsInSalesConsole" rerender="consoleModeMessage" oncomplete="adjustContainerWidth();">
            <apex:param name="param" value="" assignTo="{!isInConsoleMode}" />
        </apex:actionFunction>

        <div class="container-fluid">

			<apex:inputHidden value="{!accountPageNumber}" id="leadPageNumber"/>

            <apex:outputText value="{!convertDisabled}" id="convertDisabled" style="display:none" />

			<apex:outputPanel id="recommendationDetailsPanel" layout="block" styleClass="lattice-details" rendered="{!showRecommendationSection}">

                <div class="row">

                    <div class="col-md-1">
                        <apex:outputPanel layout="none" rendered="{!isEmbeddedInRecommendation}">
                            <button class="btn btn-default back" title="Back" onClick="back();return false;">
	                            <span class="glyphicon-sf-pagination-back"></span>
	                            {!$Label.MASS_back}
                            </button>
                        </apex:outputPanel>
                    </div>

                    <div class="col-md-11">
                        <div class="actions-toggle leads">
                            <div id="openmenu">
                                <label class="open-menu" for="menu-toggle" onclick="toggleClass(this,'close-menu', 500, 'easeOut');">Actions</label>
                            </div>
                            <input type="checkbox" id="menu-toggle"/>
                            <ul id="menu">
                                <li id="converToOppButton">
                                    <apex:outputPanel layout="none" rendered="{!!convertDisabled && showConvertOppButtonLeadBased && !isEmbeddedInLead}">

                                        <apex:commandLink styleclass="convert-opp" action="{!convertLeadWithoutRedirect}" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}','{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">
                                            <apex:param name="leadId" value="{!selectedParent.Id}" assignTo="{!selectedParentId}"/>{!$Label.lbi__rep_convert_to_lead}
                                        </apex:commandLink>
                                    </apex:outputPanel>
                                    <apex:outputLink value="#" styleClass="convert-opp disabled" rendered="{!convertDisabled}">{!$Label.lbi__rep_convert_opportunity}</apex:outputLink>
                                </li>


                                <li id="converToOppButtonEmbedded">
                                    <apex:outputPanel layout="none" rendered="{!!convertDisabled && showConvertOppButtonLeadBased && isEmbeddedInLead}">
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!convertLeadURl}" styleClass="convert-opp" target="{!actionLinkTarget}">{!$Label.lbi__rep_convert_to_lead}</apex:outputLink>
                                    </apex:outputPanel>
                                    <apex:outputLink value="#" styleClass="convert-opp disabled" rendered="{!convertDisabled}">{!$Label.lbi__rep_convert_opportunity}</apex:outputLink>
                                </li>



                                <apex:outputPanel layout="none" rendered="{!selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__ShowEmailAction__c}" >
                                    <li id="emailButton">
                                        <apex:commandLink action="{!sendEmailToLead}" styleClass="email" rendered="{!showEmailAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastEmailDatetime__c == null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParent.Id}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedParent.Name)}');">{!$Label.lbi__ais_sendemail}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!emailURLLead}" styleClass="email" rendered="{!showEmailAction && isEmbeddedInLead && selectedRecommendation.LBI__LastEmailDatetime__c == null}" target="{!actionLinkTarget}">{!$Label.lbi__ais_sendemail}</apex:outputLink>
                                        <apex:commandLink action="{!sendEmailToLead}" styleClass="email taken" rendered="{!showEmailAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastEmailDatetime__c != null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParent.Id}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedParent.Name)}');">{!$Label.lbi__ais_sendemail}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!emailURLLead}" styleClass="email taken" rendered="{!showEmailAction && isEmbeddedInLead && selectedRecommendation.LBI__LastEmailDatetime__c != null}" target="{!actionLinkTarget}">{!$Label.lbi__ais_sendemail}</apex:outputLink>

                                    </li>

                                </apex:outputPanel>

                                <apex:outputPanel layout="none" rendered="{!selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__ShowCallAction__c}" >
                                    <li id="logButton">

                                        <apex:commandLink action="{!callLead}" styleClass="call" rendered="{!showCallAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastCallDatetime__c == null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__rep_call_new}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!callURLLead}" styleClass="call" rendered="{!showCallAction && isEmbeddedInLead && selectedRecommendation.LBI__LastCallDatetime__c == null}" target="{!actionLinkTarget}">{!$Label.lbi__rep_call_new}</apex:outputLink>

                                        <apex:commandLink action="{!callLead}" styleClass="call taken" rendered="{!showCallAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastCallDatetime__c != null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__rep_call_new}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!callURLLead}" styleClass="call taken" rendered="{!showCallAction && isEmbeddedInLead && selectedRecommendation.LBI__LastCallDatetime__c != null}" target="{!actionLinkTarget}">{!$Label.lbi__rep_call_new}</apex:outputLink>

                                    </li>
                                </apex:outputPanel>

                                <apex:outputPanel layout="none" rendered="{!selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__ShowTaskAction__c}" >
                                    <li id="taskButton">

                                        <apex:commandLink action="{!logTaskLead}" styleClass="task" rendered="{!showTaskAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastTaskDatetime__c == null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__ais_newtask}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!taskURLLead}" styleClass="task" rendered="{!showTaskAction && isEmbeddedInLead && selectedRecommendation.LBI__LastTaskDatetime__c == null}" target="{!actionLinkTarget}">{!$Label.lbi__ais_newtask}</apex:outputLink>

                                        <apex:commandLink action="{!logTaskLead}" styleClass="task taken" rendered="{!showTaskAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastTaskDatetime__c != null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__ais_newtask}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!taskURLLead}" styleClass="task taken" rendered="{!showTaskAction && isEmbeddedInLead && selectedRecommendation.LBI__LastTaskDatetime__c != null}" target="{!actionLinkTarget}">{!$Label.lbi__ais_newtask}</apex:outputLink>

                                    </li>
                                </apex:outputPanel>

                                <apex:outputPanel layout="none" rendered="{!selectedRecommendation.PlayRun__r.LatticeWorkflowSetting__r.LBI__ShowEventAction__c}" >
                                    <li id="meetingButton">

                                        <apex:commandLink action="{!scheduleEventLead}" styleClass="event" rendered="{!showEventAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastEventDatetime__c == null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__rep_set_up_meeting_new}</apex:commandLink>
                                        <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!eventURLLead}" styleClass="event" rendered="{!showEventAction && isEmbeddedInLead && selectedRecommendation.LBI__LastEventDatetime__c == null}" target="{!actionLinkTarget}">{!$Label.lbi__rep_set_up_meeting_new}</apex:outputLink>



                                        <apex:commandLink action="{!scheduleEventLead}" styleClass="event taken" rendered="{!showEventAction && !isEmbeddedInLead && selectedRecommendation.LBI__LastEventDatetime__c != null}" rerender="theForm" target="{!actionLinkTarget}" onComplete="navigateToTab('{!redirectUrl}', '{!selectedParentId}', false, '{!isEmbeddedInLead}', '{!JSINHTMLENCODE(selectedRecommendation.LBI__DisplayName__c)}');">{!$Label.lbi__rep_set_up_meeting_new}</apex:commandLink>
                                         <apex:outputLink onClick="updateElementLinkToReturnInConsole(this);" value="{!eventURLLead}" styleClass="event taken" rendered="{!showEventAction && isEmbeddedInLead && selectedRecommendation.LBI__LastEventDatetime__c != null}" target="{!actionLinkTarget}">{!$Label.lbi__rep_set_up_meeting_new}</apex:outputLink>

                                    </li>
                                </apex:outputPanel>
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <apex:outputPanel rendered="{!renderViewInSalesPrism}" layout="none">
                            <a class="prism pull-right" href="#" onClick="return openSalesPrismURL('{!PrismURL}');" target="{!actionLinkTarget}">
                            	<apex:outputText value="{!$Label.lbi__rep_sales_prism}" />
                            </a>
                        </apex:outputPanel>
                    </div>
                </div>

                <div class="row">

                    <div class="col-md-12">
                        <apex:pageMessages id="pageMessages" />
                    </div>

                </div>

                <div class="row">
					<div class="col-md-12">

						<div class="rec-details-container">
                            <span class="icon rec-title glyphicon-sf-{!selectedRecommendation.PlayTypeNameClass__c}"></span>
							<h3 title="{!selectedRecommendation.LBI__DisplayName__c}" class="rec-display-name">
								<apex:outputField value="{!selectedRecommendation.LBI__DisplayName__c}" />
							</h3>

							<div class="account-details">

								<p class="description">{!selectedRecommendation.Description__c}</p>

                                <!-- Hiding created date just in case
								<span class="highlights first">
                                    {!$Label.REP_Created_Date}
									<em class="created">
										<c:FormattedDateTime datetimeValue="{!selectedRecommendation.CreatedDate}" datetimeFormat="MM/dd/yyyy" />
									</em>
								</span>
                                -->

                                <ul class="highlights">
                                    <apex:outputPanel layout="none" rendered="{!showRevenue}">
                                    <li id="revenueLabel">
                                        {!$Label.REP_Estimated_Revenue} &nbsp;
                                        <em class="revenue"><apex:outputField value="{!selectedRecommendation.LBI__MonetaryValue__c}" /></em>
                                    </li>
                                    </apex:outputPanel>
                                    <li>Days Active
                                        <em class="created">
                                            {!selectedRecommendation.AgeInDays__c}
                                        </em>
                                    </li>
                                    <li>{!$Label.REP_Status}&nbsp;<em class="created"><apex:outputField value="{!selectedRecommendation.LBI__Status__c}" /></em>
                                    </li>
                                </ul>
								<!-- Need the same score color/function as the cards. I just need to be able to change the color fo the text that outputs. -->
								<div class="rating-rank">
									<apex:outputPanel layout="inline" rendered="{!!showScore}" id="noScoreTab">

										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'A'}" >
											<div class="progress-radial progress-100">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Rank__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'B'}" >
											<div class="progress-radial progress-75">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Rank__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'C'}" >
											<div class="progress-radial progress-50">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Rank__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'D'}" >
											<div class="progress-radial progress-25">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Rank__c}" /></div>
											</div>
										</apex:outputPanel>

										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'HIGHEST'}" >
											<div class="progress-radial progress-100">
												<div class="overlay condensed"><apex:outputText value="HIGHEST" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'HIGH'}" >
											<div class="progress-radial progress-75">
												<div class="overlay condensed"><apex:outputText value="HIGH" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'MEDIUM'}" >
											<div class="progress-radial progress-50">
												<div class="overlay condensed"><apex:outputText value="MEDIUM" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'LOW'}" >
											<div class="progress-radial progress-25">
												<div class="overlay condensed"><apex:outputText value="LOW" /></div>
											</div>
										</apex:outputPanel>

									</apex:outputPanel>

									<apex:outputPanel layout="inline" rendered="{!showScore}" id="scoreTab">

										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'A'}" >
											<div class="progress-radial progress-100">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'B'}" >
											<div class="progress-radial progress-75">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'C'}" >
											<div class="progress-radial progress-50">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'D'}" >
											<div class="progress-radial progress-25">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>

										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'HIGHEST'}" >
											<div class="progress-radial progress-100">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'HIGH'}" >
											<div class="progress-radial progress-75">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'MEDIUM'}" >
											<div class="progress-radial progress-50">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>
										<apex:outputPanel layout="none" rendered="{!UPPER(selectedRecommendation.LBI__Rank__c) == 'LOW'}" >
											<div class="progress-radial progress-25">
												<div class="overlay"><apex:outputField value="{!selectedRecommendation.LBI__Likelihood__c}" /></div>
											</div>
										</apex:outputPanel>

									</apex:outputPanel>
								</div>
							</div>
						</div>
					</div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <c:TabMenuComponent id="tabMenuComponentInRec"
                            showBuyingSignals="{!showBuyingSignals}"
                            showTalkingPoints="true"
                            showPurchaseHistory="{!showPurchaseHistory}"
                            showCompanyProfile="{!areAccountExtensionsEnabled && selectedRecommendation.LBI__AccountExtension__c != null}"
                            isSuppInfoEnabled="{!isSuppInfoEnabled}"
                            isAtRecLevel="false"
                            recommendationPlayId="{!selectedRecommendation.LBI__Play__c}" />
                    </div>

                    <apex:outputPanel layout="none" rendered="{!areAccountExtensionsEnabled && acctExtId != null}">
						<apex:outputPanel id="companyProfileTabContents" layout="block" styleClass="company-profile-holder" style="display:none;">
							<c:CompanyProfileOutput id="companyProfileOutput" parentAcctExtId="{!acctExtId}" />
						</apex:outputPanel>
					</apex:outputPanel>

					<apex:outputPanel layout="none" rendered="{!isSuppInfoEnabled}">
						<apex:outputPanel id="suppInfoTable" layout="block" styleClass="suppInfoHolder loading-small" style="display:none;" >
							<apex:actionStatus id="loadingStatus">
				        		<apex:facet name="start">
				        			<apex:outputText value="{!$Label.lbi__lab_loading}" />
				        		</apex:facet>
				        		<apex:facet name="stop">
				        			<c:SupplementalInfoList id="supplementalInfoList" parentAcctId="{!selectedRecommendation.LBI__Account__c}" isSF1Boolean="{!isSF1}" isInConsoleBoolean="{!isInConsoleMode}" supplementalInfoRecord="{!selectedSupplementalInfo}" />
				        		</apex:facet>
				        	</apex:actionStatus>
						</apex:outputPanel>
					</apex:outputPanel>


					<apex:outputPanel id="iFrameHolder" layout="block" styleClass="col-md-12 iFrameHolder" >
						<iframe src="{!IFrameSource}" scrolling="no" id="theIFrame" html-iframeselector="iframeselector" width="100%" height="140px" />
					</apex:outputPanel>

				</div>

    			</apex:outputPanel>

    			<apex:outputPanel id="recommendationErrorPanel" layout="block" rendered="{!!showRecommendationSection && !foundAccountThroughAltRelationship}" styleClass="lattice-details" >
    				
    				<apex:pageMessages id="recomErrorPanelPageMessages" />

    				<apex:outputPanel layout="block" styleClass="no-recommendations" id="noRecommendationsMessage">
    					<apex:outputText value="{!ErrorMessage}" />
    				</apex:outputPanel>

    			</apex:outputPanel>
    			
    			<apex:outputPanel id="alternativeRelationshipPanel" layout="none">
    				<c:AccountRecommendationCardView rendered="{!foundAccountThroughAltRelationship && !showRecommendationSection}" 
    												accountId="{!accountIdAttachedToLead}"
    												parentLeadId="{!selectedParentId}" />
    			</apex:outputPanel>

    			<apex:actionFunction action="{!selectParent}" name="selectNewLeadApex" reRender="theForm" onComplete="attachClickOverridesOnCheckboxes();" >
    				<apex:param name="selectedParentId" assignTo="{!selectedParentId}" value="" />
    			</apex:actionFunction> 
    			
    			<!-- <apex:actionFunction action="{!selectSuppInfo}" name="selectSuppInfoApex" rerender="supplementalInfoList" onComplete="lejQuery('label.open-menu2').click();"> -->
    			<apex:actionFunction status="loadingStatus" action="{!selectSuppInfo}" name="selectSuppInfoApex" rerender="supplementalInfoList" oncomplete="adjustContainerWidth();" >
    				<apex:param name="selectedSuppInfoId" assignTo="{!selectedSuppInfoId}" value="" />
    			</apex:actionFunction>

    			<apex:actionFunction status="loadingStatusRec" action="{!selectSuppInfo}" name="selectSuppInfoApexRec" rerender="supplementalInfoList" oncomplete="adjustContainerWidth();" >
    				<apex:param name="selectedSuppInfoId" assignTo="{!selectedSuppInfoId}" value="" />
    			</apex:actionFunction>

            </div>
            <script type="text/javascript">
                mixpanelModule.assingMPEvents();
            </script>
		</apex:form>
	</section>


	</apex:outputpanel>

</apex:page>