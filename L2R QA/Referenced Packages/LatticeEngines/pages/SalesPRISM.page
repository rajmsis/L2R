<apex:page name="SalesPRISM"
    id="salesPRISM"
    Controller="LBI.PrismVFTabPageExtension"
    setup="false"
    sidebar="{!showSidebar}">

<script language="javascript" runat="server" src="{!URLFOR($Resource.jQuery)}"></script>

<div id="dsessionid" style="display:none">{!$Api.Session_ID}</div>
<div id="dserverurl" style="display:none">{!$Api.Partner_Server_URL_170}</div>
<div id="duserid" style="display:none">{!userId}</div>
<div id="dprismaccountid" style="display:none">{!prismAccountId}</div>
<div id="dlinkedinreturn" style="display:none">{!linkedInReturn}</div>
<div id="dsalesprismurl" style="display:none">{!prismUrl}</div>
<div id="dwindowheight" style="display:none">{!windowHeight}</div>

<script language="javascript" runat="server">

$(document).ready(function(){

    var url = document.getElementById('dsalesprismurl').innerHTML;
    url += '?'+ 'userlink=' + jUserLink() + '&serverurl=' + jServerUrl() + '&crmtype=Salesforce';

    var standaloneCrm = {!standaloneCrm};
    if (standaloneCrm  == true) {
        url += '&standalonecrm=true';
    } else {
        url += '&sessionid=' + jSessionId() + '&Directory=salesforce';
    }

    // Code required for Inside Sales integration
    var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
    var eventHandler = window[eventMethod];
    var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";
    var prismsuffix = url.substr(url.indexOf('://') + 3, url.length - url.indexOf('://'));
    var prismorigin = url.substr(0, url.indexOf('://') + prismsuffix.indexOf('/') + 3);

    eventHandler(messageEvent,function(ev) {
        if (ev != null && ev.origin == prismorigin)
        {
            var spec = JSON.parse(ev.data);
            if (spec != null && spec.command == "placeCallViaInsideSales")
            {
                ISTools.Record.dialNumber({ phone_number: spec.phone_number, who_id: spec.who_id });
            }
        }
    },false);

    var accountLink = jPrismAccountId();
    var accountQueryString = CrmAccount();
    if(accountLink != null && accountLink.length != 0) {
        url += '&Account=' + accountLink;
    } else if (accountQueryString != null) {
        url += '&Account=' + accountQueryString ;
    }

    var windowHeight = document.getElementById('dwindowheight').innerHTML;
    var salesPrismIframe = document.createElement("iframe");
    salesPrismIframe.setAttribute('id', 'salesPrismIframe');
    salesPrismIframe.setAttribute('width', '100%');
    salesPrismIframe.setAttribute('height', windowHeight);
    salesPrismIframe.setAttribute('src', url);
    salesPrismIframe.setAttribute('frameborder', '0');
    $(salesPrismIframe).insertAfter("#dsalesprismurl");

});

function jLinkedInReturn()
{
    return document.getElementById('dlinkedinreturn').innerHTML;
}

function jGetInstanceUrl()
{
  var url = jServerUrl();
  var index = url.indexOf('//');
  index = url.indexOf('/',index+2);
  var instanceurl = url.substring(0, index);
  return instanceurl;
}

function jSessionId()
{
    return document.getElementById('dsessionid').innerHTML;
}
function jServerUrl()
{
    return document.getElementById('dserverurl').innerHTML;
}
function jUserId()
{
    return document.getElementById('duserid').innerHTML;
}
function jUserLink()
{
    return jGetInstanceUrl() + '/' + jUserId();
    //return document.getElementById('duserid').innerHTML;
}
function jPrismAccountId()
{
    return document.getElementById('dprismaccountid').innerHTML;
}

function Decode(value) {
    var result = value;

    var matches = result.match(new RegExp("%..", "gi"));
    if (matches != null) {
        for (i = 0; i < matches.length; i++) {
            var charCode = parseInt("0x" + matches[i].substring(1));
            var character = String.fromCharCode(charCode);
            result = result.replace(matches[i], character);
        }
    }

    return result;
}

function GetQueryStringValue(key, keepHash) {
    keepHash = typeof keepHash === 'boolean' ? keepHash : false;
    var result = null;
    var payload = window.location.href;
    var qIndex = payload.indexOf("?");
    if (qIndex != -1) {
        var queryString = payload.substring(qIndex + 1);

        var pair = null;
        var params = queryString.split("&");
        for (i = 0; i < params.length; i++) {

            pair = params[i].split("=");

            if (pair.length == 2 && pair[0] == key) {
                result = pair[1];
                break;
            }
        }
    }

    //cleanup: if the result contains a hash "#"
    //remove the hash and anything after
    if (result != null && !keepHash) {
        var hashIndex = result.indexOf("#");
        if (hashIndex != -1) {
            result = result.substring(0, hashIndex);
        }
    }

    return (result != null ? this.Decode(result) : null);
}

function CrmAccount() {
    return GetQueryStringValue("Account");
}

</script>
</apex:page>